{"version":3,"sources":["Componentes/TablaUsuarios.js","Componentes/FormularioUsuarios.js","App.js","reportWebVitals.js","index.js"],"names":["TablaUsuarios","props","console","log","className","usuarios","map","data","i","nombre","usuario","onClick","EliminarUsuario","id","FormularioUsuarios","useForm","register","errors","handleSubmit","onSubmit","e","AgregarUsuario","target","reset","htmlFor","type","name","autoComplete","ref","required","value","message","App","datosUsuarios","uuidv4","useState","setUsuarios","filtroArray","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAEaA,EAAgB,SAACC,GAI1B,OAFAC,QAAQC,IAAIF,GAGR,wBAAOG,UAAU,QAAjB,UACI,gCACI,+BACI,wCACA,yCACA,+CAGR,gCAGQH,EAAMI,SAASC,KAAI,SAACC,EAAMC,GACtB,OACI,+BACI,6BAAKD,EAAKE,SACV,6BAAKF,EAAKG,UACV,6BACI,sBAAKN,UAAU,iCAAf,UACI,wBAAQA,UAAU,sBAAlB,oBAGA,wBACIA,UAAU,wBACVO,QAAS,WACLV,EAAMW,gBAAgBL,EAAKM,KAHnC,2BARHN,EAAKM,a,eChB7BC,EAAqB,SAACb,GAAW,IAAD,MAEEc,cAAnCC,EAFiC,EAEjCA,SAAUC,EAFuB,EAEvBA,OAAQC,EAFe,EAEfA,aAQ1B,OACI,uBAAMC,SAAUD,GANH,SAACX,EAAMa,GACpBnB,EAAMoB,eAAed,GACrBa,EAAEE,OAAOC,WAIT,UAEI,uBAAOC,QAAQ,GAAf,oBACA,uBACIpB,UAAU,eACVqB,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,IACIZ,EAAS,CACLa,SAAU,CAAEC,OAAO,EAAMC,QAAS,uBAG9C,8BACI,sBAAM3B,UAAU,cAAhB,gBAA+Ba,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAQR,cAAvC,aAA+B,EAAgBsB,YAGnD,uBAAOP,QAAQ,GAAf,qBACA,uBACIC,KAAK,OACLrB,UAAU,eACVsB,KAAK,UACLC,aAAa,MACbC,IACIZ,EAAS,CACLa,SAAU,CAAEC,OAAO,EAAMC,QAAS,uBAG9C,8BACI,sBAAM3B,UAAU,cAAhB,gBAA+Ba,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAQP,eAAvC,aAA+B,EAAiBqB,YAEpD,uBACA,wBAAQN,KAAK,SAASrB,UAAU,yBAAhC,iCCKG4B,G,MA3CH,WAEV,IAAMC,EAAgB,CACpB,CAAEpB,GAAIqB,cAAUzB,OAAQ,gBAAiBC,QAAS,YAClD,CAAEG,GAAIqB,cAAUzB,OAAQ,mBAAoBC,QAAS,aACrD,CAAEG,GAAIqB,cAAUzB,OAAQ,uBAAqBC,QAAS,eALxC,EAQgByB,mBAASF,GARzB,mBAQT5B,EARS,KAQC+B,EARD,KAwBhB,OACE,qBAAKhC,UAAU,sBAAf,SAEE,sBAAKA,UAAU,MAAf,UAEE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CAAoBiB,eApBL,SAACX,GACtBA,EAAQG,GAAKqB,cACbE,EAAY,GAAD,mBACN/B,GADM,CACIK,UAoBX,qBAAKN,UAAU,+BAAf,SACE,cAAC,EAAD,CAAeC,SAAUA,EAAUO,gBAjBnB,SAACC,GAEvB,IAAIwB,EAAchC,EAASiC,QAAO,SAAA/B,GAAI,OAAIA,EAAKM,KAAOA,KACtDuB,EAAYC,eCjBDE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b0547c8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const TablaUsuarios = (props) => {\r\n\r\n    console.log(props)\r\n\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Nombre</th>\r\n                    <th>Usuario</th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n\r\n                    props.usuarios.map((data, i) => {\r\n                        return (\r\n                            <tr key={data.id}>\r\n                                <td>{data.nombre}</td>\r\n                                <td>{data.usuario}</td>\r\n                                <td>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <button className=\"btn btn-info btn-sm\">\r\n                                            Editar\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-danger btn-sm\"\r\n                                            onClick={() => {\r\n                                                props.EliminarUsuario(data.id)\r\n                                            }}>\r\n                                            Borrar\r\n                                        </button>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n\r\n\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport const FormularioUsuarios = (props) => {\r\n\r\n    const { register, errors, handleSubmit } = useForm();\r\n\r\n\r\n    const onSubmit = (data, e) => {\r\n        props.AgregarUsuario(data)\r\n        e.target.reset()\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <label htmlFor=\"\">Nombre</label>\r\n            <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                autoComplete=\"off\"\r\n                ref={\r\n                    register({\r\n                        required: { value: true, message: 'Campo requerido' }\r\n                    })\r\n                } />\r\n            <div>\r\n                <span className=\"text-danger\">{errors?.nombre?.message}</span>\r\n            </div>\r\n\r\n            <label htmlFor=\"\">Usuario</label>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"usuario\"\r\n                autoComplete=\"off\"\r\n                ref={\r\n                    register({\r\n                        required: { value: true, message: 'Campo requerido' }\r\n                    })\r\n                } />\r\n            <div>\r\n                <span className=\"text-danger\">{errors?.usuario?.message}</span>\r\n            </div>\r\n            <br />\r\n            <button type=\"submit\" className=\"btn btn-info btn-block\">Agregar Usuario</button>\r\n        </form>\r\n    )\r\n}\r\n","\nimport React, { useState } from 'react'\n\nimport { TablaUsuarios } from \"./Componentes/TablaUsuarios\";\nimport { v4 as uuidv4 } from 'uuid'\nimport { FormularioUsuarios } from './Componentes/FormularioUsuarios';\n\nimport './Estilos/App.css'\n\nconst App = () => {\n\n  const datosUsuarios = [\n    { id: uuidv4(), nombre: \"Pedro Navajas\", usuario: \"Pedro123\" },\n    { id: uuidv4(), nombre: \"Camilo Cifuentes\", usuario: \"Camilo123\" },\n    { id: uuidv4(), nombre: \"Marcela CastaÃ±eda\", usuario: \"Marcela123\" }\n  ]\n\n  const [usuarios, setUsuarios] = useState(datosUsuarios)\n\n  const AgregarUsuario = (usuario) => {\n    usuario.id = uuidv4()\n    setUsuarios([\n      ...usuarios, usuario\n    ])\n  }\n\n  const EliminarUsuario = (id) => {\n    //console.log(id)\n    let filtroArray = usuarios.filter(data => data.id !== id)\n    setUsuarios(filtroArray)\n  }\n\n\n  return (\n    <div className=\"container-fluid p-4\">\n\n      <div className=\"row\">\n\n        <div className=\"col-md-6\">\n          <FormularioUsuarios AgregarUsuario={AgregarUsuario} />\n        </div>\n\n        <div className=\"col-md-6 table-responsive-sm\">\n          <TablaUsuarios usuarios={usuarios} EliminarUsuario={EliminarUsuario} />\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}